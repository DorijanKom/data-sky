#!/bin/sh

set -o errexit
set -o nounset

export REDIS_HOST="${REDIS_HOST:-"127.0.0.1"}"
export REDIS_PORT="${REDIS_PORT:-"6379"}"
export REDIS_PASSWORD="${REDIS_PASSWORD:-""}"
export REDIS_ADDR="$REDIS_HOST:$REDIS_PORT"
if [[ -n "$REDIS_PASSWORD" ]]; then
        export REDIS_URL="redis://$REDIS_PASSWORD@$REDIS_ADDR/0"
        export REDIS_CACHE_URL="rediscache://$REDIS_PASSWORD@$REDIS_ADDR/1?client_class=django_redis.client.DefaultClient&password=$REDIS_PASSWORD"
        export SESSION_CACHE_URL="rediscache://$REDIS_PASSWORD@$REDIS_ADDR/2?client_class=django_redis.client.DefaultClient&password=$REDIS_PASSWORD"
    else
        export REDIS_URL="redis://$REDIS_ADDR/0"
        export REDIS_CACHE_URL="rediscache://$REDIS_ADDR/2?client_class=django_redis.client.DefaultClient"
        export SESSION_CACHE_URL="rediscache://$REDIS_ADDR/3?client_class=django_redis.client.DefaultClient"
fi

if [ -z "${POSTGRES_USER}" ]; then
    base_postgres_image_default_user='postgres'
    export POSTGRES_USER="${base_postgres_image_default_user}"
fi
export DATABASE_URL="postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}"

postgres_ready() {
python << END
import sys

import psycopg2

try:
    psycopg2.connect(
        dbname="${POSTGRES_DB}",
        user="${POSTGRES_USER}",
        password="${POSTGRES_PASSWORD}",
        host="${POSTGRES_HOST}",
        port="${POSTGRES_PORT}",
    )
except psycopg2.OperationalError:
    sys.exit(-1)
sys.exit(0)

END
}
until postgres_ready; do
  >&2 echo 'Waiting for PostgreSQL to become available...'
  sleep 1
done
>&2 echo 'PostgreSQL is available'

exec "$@"
